1. Deploy new k8s on AWS:
export KOPS_STATE_STORE=s3://demo.k8s.simpledevops.net
ssh-key OR delete .ssh/known_hosts
kops create cluster --cloud=aws --zones=us-east-1b --name=demo.k8s.simpledevops.net --dns-zone=simpledevops.net --dns private
kops update cluster demo.k8s.simpledevops.net --yes
kops validate cluster
ssh -i ~/.ssh/id_rsa ubuntu@api.demo.k8s.simpledevops.net

@Ansible-server:
Modify hosts file
Copy id_rsa.pub from Ansible to authorized_host on k8s master
ssh -i id_rsa ubuntu@54.83.141.18

2. PACKER:
cat create-docker-image.json
{
  "builders": [
    {
      "type": "docker",
      "image": "tomcat:8.0",
      "commit": "true",
      "run_command": [
        "-d",
        "-i",
        "-t",
        "tomcat:8.0"
      ]
    }
  ],

  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "apt-get update",
        "mkdir -p /usr/local/tomcat/webapps"
      ]
    },
    {
      "type": "file",
      "source": "webapp.war",
      "destination": "/usr/local/tomcat/webapps/webapp.war"
    }
  ],

  "post-processors": [
    [
      {
        "type": "docker-tag",
        "repository": "duclpminh/simple-devops-image",
        "tag": "latest"
      },
      {
        "type": "docker-push",
        "login": "true",
        "login_username": "duclpminh",
        "login_password": "Windupbird@94"
      }

    ],
    {
      "type": "shell-local",
      "inline": ["docker image prune -af"]
    }
  ]
}


####################################

3. ANSIBLE:

Command: ansible-playbook -i [hosts_file] [ansible-playbook_file]

cat kubernetes-deployment.yml
---
- name: Create pods using deployment
  hosts: kubernetes
  user: ubuntu

  tasks:
  - name: create a deployment
    command: kubectl apply -f k8s-deploy.yml

  - name: update deployment with new pods if image updated in docker hub
    command: kubectl rollout restart deployment.v1.apps/simple-devops-deployment
++

cat kubernetes-service.yml
---
- name: create service for deployment
  hosts: kubernetes
  user: ubuntu

  tasks:
  - name: create a service
    command: kubectl apply -f k8s-service.yml
++

cat hosts
[ansible-server]
localhost

[kubernetes]
54.83.141.18 <- k8s master IP


#######################

4. K8s Master:

cat k8s-deploy.yml
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: simple-devops-deployment
spec:
  selector:
    matchLabels:
      app: simple-devops-project
  replicas: 2 # tells deployment to run 2 pods matching the template
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      labels:
        app: simple-devops-project
    spec:
      containers:
      - name: simple-devops-project
        image: duclpminh/simple-devops-image
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
++

cat k8s-service.yml
apiVersion: v1
kind: Service
metadata:
  name: simple-devops-service
  labels:
    app: simple-devops-project
spec:
  selector:
    app: simple-devops-project
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 31200
